#!/usr/bin/env bash

# modules build fetch extract

log "\nNote: This will do a standard install."
log "Use the 'passenger' BDSM extension for installing passenger Nginx."

configure_flags=(--prefix="$nginx_install_path"
  --conf-path="$nginx_config_file"
  --sbin-path="$nginx_binary"
  --pid-path="$nginx_pid_file"
  --lock-path="$nginx_lock_file"
  --http-client-body-temp-path="$nginx_spool_path/client_body_temp"
  --http-proxy-temp-path="$nginx_spool_path/proxy_temp"
  --http-fastcgi-temp-path="$nginx_spool_path/fastcgi_temp"
  --http-log-path="$nginx_log_path/access.log"
  --error-log-path="$nginx_log_path/error.log"
  --with-imap
  --with-imap_ssl_module
  --with-http_ssl_module
  --with-http_stub_status_module
  --with-pcre
)

true "${source_path:=/usr/local/src}" \
     "${nginx_version:=0.8.54}" \
     "${archive_format:=tar.gz}"

ensure_paths_exist "$source_path"

cd "$source_path"

package="nginx"
packge_url="http://nginx.org/download/${package}-${nginx_version}.${archive_format}"

curl -O -L "$packge_url"

tar zxf "${package}-${nginx_version}.tar.gz"

cd "${package}-${nginx_version}"

./configure ${configure_flags[@]}

make

make install

config_directories=(/var/spool/nginx/client_body_temp
/var/log/nginx
"$nginx_config_path/conf"
"$nginx_config_path/servers"
)

ensure_paths_exist "${config_directories[@]}"

files=( fastcgi.conf fastcgi.conf.default fastcgi_params
fastcgi_params.default koi-utf koi-win mime.types mime.types.default
nginx.conf.default scgi_params scgi_params.default uwsgi_params
uwsgi_params.default win-utf
)

(
enter "$nginx_path"
move_files_to "${nginx_config_path}/${file}" "${files[@]}"
)

ensure_files_exist \
  "${nginx_config_path}/passenger" # empty file as a placeholder.

install_template "nginx" to "${init_scripts_path}"
install_template "nginx.conf" to "${nginx_config_path}"
install_template "proxy.conf" to "${nginx_config_path}/conf"

ensure_files_are_executable \
  "${init_scripts_path}/nginx"

# TODO: better handling of already exising nginx user here
groupadd nginx 2>/dev/null
useradd -G nginx -M nginx 2>/dev/null

chown_paths "nginx:nginx" \
  "${config_directories[@]}"

