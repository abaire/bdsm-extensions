#!/usr/bin/env bash

# Author: Wayne E. Seguin
#         wayneeseguin@gmail.com
#
# Nginx control file.
#
#   May be either in the $PATH as nginx_ctl
#   or used as /etc/init.d/nginx
#

action="${1:-""}"

while [[ $# -gt 0 ]] ; do
  token="$1" ; shift
  case $token in
    start|stop|restart|reload|log|shutdown|check|help)
      action=$token
      ;;
    --confd) nginx_confd="$1"     ; shift ;;
    --path)  nginx_path="$1"      ; shift ;;
    --conf)  nginx_conf="$1"      ; shift ;;
    --pid)   nginx_pid="$1"       ; shift ;;
    --log)   nginx_log_path="$1"  ; shift ;;
    --bin)   nginx="$1"           ; shift ;;
    --lock)  nginx_lock="$1"      ; shift ;;
    *)       action="error" ;;
  esac
done

nginx_confd="${nginx_confd:-"/etc/conf.d/nginx"}"

if [[ -s "$nginx_confd" ]] ; then
  source "$nginx_confd"
fi

nginx_lock="${nginx_lock:-/var/lock/nginx}"
if [[ -z "${nginx:-""}" ]] ; then
  nginx="$(command -v nginx)"
fi
nginx="${nginx:-/sbin/nginx}"
nginx_path="${nginx_path:-/etc/nginx}"
nginx_conf="${nginx_conf:-"$nginx_path/nginx.conf"}"
nginx_pid="${nginx_pid:-/var/run/nginx.pid}"
nginx_log_path="${nginx_log_path:-/var/log/nginx}"

usage() {

  printf "
  Usage:

    $0 start stop restart reload log shutdown check help [options]

  Options:

    --confd - Path to conf.d file, optional
    --path  - Path to configuration files
    --conf  - Path to nginx.conf
    --pid   - Path to nginx pidfile
    --log   - Path to nginx logs
    --bin   - Path to nginx binary
    --lock  - Path to nginx startup lock file

  Description:

    start    - Start Nginx
    stop     - Stop Nginx
    restart  - Restart Nginx
    reload   - Reload Nginx configuration files in running nginx
    log      - Reopen log files in running nginx
    shutdown - Gracefully shut down workers
    check    - Check Nginx configuration for errors
    help     - Display this usage information

"
}

start() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    printf "It appears that Nginx ($master_pid) is already running\n(from pidfile: $nginx_pid)\n"

  else

    # TODO: Pass through the --pid and --log here.
    $nginx -c "$nginx_conf"
    result=$?

    [[ $result -eq 0 ]] && touch $nginx_lock

  fi

}

stop() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    kill -QUIT $master_pid
    result=$?

    [[ $retval -eq 0 ]] && rm -f $nginx_lock

  else

    printf "It appears that Nginx is already not running\n(from pidfile: $nginx_pid)\n"

  fi

}

restart() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    printf "Hot upgrading Nginx ($master_pid) running binary.\n"

    kill -USR2 $master_pid

  else

    printf "It appears that Nginx is not running.\n  (using pidfile: $nginx_pid)\nStarting Nginx.\n"

    start
  fi
}

reload() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    printf "Reloading Nginx ($master_pid) configuration."

    kill -HUP $master_pid

  else

    printf "It appears that Nginx is not running.\n(from pidfile: $nginx_pid)\nStarting Nginx.\n"

    start
  fi
}

log() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    printf "Re-opening Nginx ($master_pid) logs."

    kill -USR1 $master_pid

  else

    printf "It appears that Nginx is already not running\n(from pidfile: $nginx_pid)\nStarting Nginx.\n"

    start
  fi

}


shutdown() {

  if [[ ${master_pid:-0} -gt 0 ]] ; then

    printf "Gracefully shutting down Nginx ($master_pid) workers.\n  (workers will finish current request first)\n"

    kill -WINCH $master_pid

  else

    printf "It appears that Nginx is not running.\n(from pidfile: $nginx_pid)\nStarting Nginx.\n"

  fi

}

check() {

  nginx -t -c "$nginx_conf"

  local result=$?

  if [[ $result -gt 0 ]] ; then

    printf "\n$nginx_conf syntax NOT OK\n"

  else

    printf "\n$nginx_conf syntax OK\n"

  fi

  return $result
}

declare -i master_pid

if [[ -f "$nginx_pid" ]] ;then
  master_pid=$(cat "$nginx_pid")
else
  master_pid=0
fi

case "$action" in
  start)    start   ;;
  stop)     stop    ;;
  restart)  restart ;;
  reload)   reload  ;;
  check)    check   ;;
  log)      log     ;;
  shutdown) shutdown ;;
  help)     usage   ;;
  *)        usage ; exit 1 ;;
esac

exit $?
