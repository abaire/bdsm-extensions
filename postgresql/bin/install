#!/usr/bin/env bash

usage() {
  printf "
  Usage:

    $0 [options]

  options:

    --prefix   - specify prefix path
    --src)     - specify source directory
    --data)    - specify data directory
    --user)    - specify user to install as
    --version) - specify version to install
    --licence) - view licence
    --help)    - view this usage information

"
  return 0
}

log "

License:

$(cat -v ${extension_path}/LICENCE)

Message:

I am happy to discuss improving this script, or field questions.

I am wayneeseguin in #rvm on irc.freenode.net

This script will install ${package}-${version} to
$install_path and configure the install.

"

while [[ $# -gt 0 ]] ; do

  token="$1" ; shift

  case "$token" in
    --prefix)  prefix_path="$1" ; shift ;;
    --src)     src_path="$1"    ; shift ;;
    --data)    data_path="$1"   ; shift ;;
    --user)    user="$1"        ; shift ;;
    --version) version="$1"     ; shift ;;
    --licence)
      cat -v ${extension_path}/LICENCE
      exit 0
      ;;
    --help)    usage   ; exit 0 ;;
    --trace)   set -o xtrace ;;
    *)         usage   ; exit 1 ;;
  esac

done

configure_flags=(
  --prefix="$install_path"
  --datadir="$pgsql_path"
  --with-openssl
  --enable-shared
)

[[ "$MACHTYPE" = *darwin* ]] && \
  configure_flags[${#configure_flags[@]}]="--with-bonjour"

export CFLAGS='-O2'

install_package


# Post installation tasks.
ensure_paths_exist "$pgsql_path/$version"

chown_paths "$user" "$pgsql_path"

postgresql_initdb

configure_kernel_parameters

log "

Installation and configuration of postgresql is now complete.

  * postgresql has been installed to $install_path
  * postgresql configuration and data files will are in $pgsql_path
  * You can control the postgresql server via the bdsm postgresql extension'
  * The postgersql superuser is '$user', no password.
"
