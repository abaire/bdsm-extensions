#!/usr/bin/env bash

postgresql_initdb()
{
  ensure_paths_exist "$data_path/$version"

  chown_paths "$package_user" "$data_path"

  log "
Initializing postgresql $version data directory in $data_path/$version
with superuser set to '$package_user'.
"
  command="'$install_path/bin/initdb' --pgdata='$data_path/data' --encoding=utf8 --username=$package_user"
  create_test="$install_path/bin/createdb test --username ${package_user}"

  if running_as_root ; then
    run_as_user "${package_user}" "${command}"
    run_as_user "${package_user}" "$create_test"
  else
    "${command}"
    "${create_test}"
  fi

  postgresql_configure
}

postgresql_configure()
{
  if [[ ! -d "$data_path/data" ]] ; then
    log "Symlinking postgresql data directory.\n"

    remove_files "$data_path/data"

    link "$data_path/$version"\
      to "$data_path/data"
  fi

  if [[ ! -s "$data_path/data/postgresql.conf" ]] ; then
    log "Installing postgresql.conf."

    copy "$data_path/postgresql.conf.sample" \
      to "$data_path/data/postgresql.conf"
  fi

  chown_paths "$package_user" "$data_path" # One more for good measure.

  log "\nSymlinking $install_path to $prefix_path/postgresql"

  remove_paths "$prefix_path/postgresql"

  link "$install_path" to "$prefix_path/postgresql"

  ensure_paths_exists "$data_path" "$log_dir"

  chown_paths "$package_user" "$data_path" "$log_dir"

  chmod_paths 0700 "$data_path"
}

configure_postgresql_for_users()
{
  # TODO: Make this a bit more robust.
  log "\nNow updating $HOME/.bash_profile with the postgres environment...\n"
  for profile in "${profiles[@]}" ; do
    if ! grep -q "PGUSER" $profile ; then
      echo "export PGUSER='$package_user'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "PGDATA" $profile ; then
      echo "export PGDATA='$data_path/data'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "PGLOG" $profile ; then
      echo "export PGLOG='$data_path/server.log'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "$install_path" $profile ; then
      echo "export PATH=\"$prefix_path/postgresql/bin:\$PATH\"" \
        >> "$profile.postgres"
    fi

    move "${profile}" \
      to "${profile}.${timestamp}"

    move "${profile}.postgres" \
      to "${profile}"
  done

  log "NOTE: Your original .bash_profile has been backed up as $HOME/.bash_profile.$timestamp"
}


postgresql_ldconfig()
{
  if running_as_root && os_is_linux ; then
    echo "${install_path}/lib" \
      > /etc/ld.so.conf.d/postgresql.conf

    /sbin/ldconfig
  fi
}
