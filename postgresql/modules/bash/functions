#!/usr/bin/env bash

postgresql_kernel_parameters()
{
  true
}

postgresql_postinstall()
{
  ensure_user_exists "$package_user"

  ensure_paths_exist "$data_path"

  chown_paths "$user" "$data_path"
}

postgresql_initdb()
{
  log "Initializing postgresql data directory in $data_path"

  ensure_paths_exist "$data_path"

  chown_paths "$package_user" "$data_path"

  command="'$install_path/bin/initdb' --pgdata='$data_path' --encoding=utf8 --username=$package_user"

  link --force "${data_path}" \
    to "${data_path%\/*}/data"


  if running_as_root ; then
    run_as_user "${package_user}" "${command}"
  else
    "${command}"
  fi

  postgresql_configure
}

postgresql_configure()
{
  log "Configuring postgresql server."

  local file
  for file in postgresql pg_hba pg_ident recovery ; do
    if [[ ! -s "$data_path/${file}.conf" ]] ; then
      log "Installing ${file}.conf to ${data_path}"
      cp -f "$data_path/${file}.conf.sample" "$data_path/${file}.conf"
    fi
  done

  log "\nSymlinking $install_path to $prefix_path/postgresql"

  remove_paths \
    "$prefix_path/postgresql"

  link "$install_path" \
    to "$prefix_path/postgresql"

  ensure_paths_exist \
    "$data_path" \
    "$log_path"

  chown_paths "$package_user" \
    "$data_path"

  chmod_paths 0700 \
    "$data_path"
}

configure_postgresql_for_users()
{
  # TODO: Make this a bit more robust.
  log "\nNow updating $HOME/.bash_profile with the postgres environment...\n"
  for profile in "${profiles[@]}" ; do
    if ! grep -q "PGUSER" $profile ; then
      echo "export PGUSER='$package_user'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "PGDATA" $profile ; then
      echo "export PGDATA='$data_path/data'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "PGLOG" $profile ; then
      echo "export PGLOG='$data_path/server.log'" \
        >> "$profile.postgres"
    fi

    if ! grep -q "$install_path" $profile ; then
      echo "export PATH=\"$prefix_path/postgresql/bin:\$PATH\"" \
        >> "$profile.postgres"
    fi

    move "${profile}" \
      to "${profile}.${timestamp}"

    move "${profile}.postgres" \
      to "${profile}"
  done

  log "NOTE: Your original .bash_profile has been backed up as $HOME/.bash_profile.$timestamp"
}


postgresql_ldconfig()
{
  log "Adding Postgresql libraries to system ld path."

  if running_as_root && os_is_linux ; then
    echo "${prefix_path}/postgresql/lib" \
      > /etc/ld.so.conf.d/postgresql.conf

    chmod_paths 0644 \
      "/etc/ld.so.conf.d/postgresql.conf"

    /sbin/ldconfig
  fi
}

postgresql_init_script()
{
  log "Installing Postgresql init script"
  install_template "postgresql" \
    to "${init_scripts_path}/postgresql"

  ensure_files_are_executable \
    "${init_scripts_path}/postgresql"

  chmod_paths 0755 \
    "${init_scripts_path}/postgresql"
}

postgresql_profile_d()
{
  if running_as_root && os_is_linux ; then
    log "Installing Postgresql profile.d script"

    install_template "postgresql.sh" \
      to "/etc/profile.d/postgresql.sh"

    chmod_paths 0755 \
      "/etc/profile.d/postgresql.sh"
  fi
}

postgresql_conf_d()
{
  if running_as_root && os_is_linux ; then
    log "Installing Postgresql conf.d script"

    install_template "postgresql.conf.d" \
      to "/etc/conf.d/postgresql.conf"

    chmod_paths 0644 \
      "/etc/conf.d/postgresql.conf"
  fi
}

