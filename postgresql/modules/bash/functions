#!/usr/bin/env bash

postgresql_kernel_parameters()
{
  true # TODO: Cross the finish line!!!
}

postgresql_initdb()
{
  log "Initializing postgresql data directory in $data_path"

  ensure_paths_exist "${data_path}"

  chown_paths "$package_user:$package_user" "${data_path}"

  command="'$install_path/bin/initdb' --pgdata='$data_path/data' --encoding=utf8 --username=$package_user"

  if running_as_root ; then
    run_as_user "${package_user}" "${command}"
  else
    "${command}"
  fi

  chown_paths "$package_user:$package_user" "${data_path}"

  chmod_paths 0700 "${data_path}"

  postgresql_conf
}

postgresql_conf()
{
  local file

  log "Configuring postgresql server."

  ensure_paths_exist "$data_path" "$log_path"

  link --force "${data_path}" to "${data_base_path}/data"

  for file in postgresql pg_hba pg_ident recovery ; do
    if file_is_empty_or_missing "$data_path/${file}.conf" ; then
      log "Installing ${file}.conf to ${data_path}"

      copy "$data_path/${file}.conf.sample" to "$data_path/${file}.conf"
    fi
  done

  chown_paths "$package_user" "$data_base_path"

  chmod_paths 0700 "$data_path"
}

postgresql_init_script()
{
  log "Installing Postgresql init script"

  install_template "postgresql" to "${init_scripts_path}/postgresql"

  ensure_files_are_executable "${init_scripts_path}/postgresql"

  chmod_paths 0755 "${init_scripts_path}/postgresql"
}

postgresql_conf_d()
{
  if running_as_root ; then

    ensure_paths_exist "/etc/conf.d"

    log "Installing Postgresql conf.d script"

    install_template "postgresql.conf.d" to "/etc/conf.d/postgresql.conf"

    chmod_paths 0644 "/etc/conf.d/postgresql.conf"
  fi
}

